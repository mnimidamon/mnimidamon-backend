// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mnimidamonbackend/models"
)

// RequestBackupUploadOKCode is the HTTP code returned for type RequestBackupUploadOK
const RequestBackupUploadOKCode int = 200

/*RequestBackupUploadOK Upload request flag has been updated

swagger:response requestBackupUploadOK
*/
type RequestBackupUploadOK struct {
}

// NewRequestBackupUploadOK creates RequestBackupUploadOK with default headers values
func NewRequestBackupUploadOK() *RequestBackupUploadOK {

	return &RequestBackupUploadOK{}
}

// WriteResponse to the client
func (o *RequestBackupUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// RequestBackupUploadBadRequestCode is the HTTP code returned for type RequestBackupUploadBadRequest
const RequestBackupUploadBadRequestCode int = 400

/*RequestBackupUploadBadRequest Supplied parameters were not okay.

swagger:response requestBackupUploadBadRequest
*/
type RequestBackupUploadBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRequestBackupUploadBadRequest creates RequestBackupUploadBadRequest with default headers values
func NewRequestBackupUploadBadRequest() *RequestBackupUploadBadRequest {

	return &RequestBackupUploadBadRequest{}
}

// WithPayload adds the payload to the request backup upload bad request response
func (o *RequestBackupUploadBadRequest) WithPayload(payload *models.Error) *RequestBackupUploadBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request backup upload bad request response
func (o *RequestBackupUploadBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestBackupUploadBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestBackupUploadUnauthorizedCode is the HTTP code returned for type RequestBackupUploadUnauthorized
const RequestBackupUploadUnauthorizedCode int = 401

/*RequestBackupUploadUnauthorized Unauthorized.

swagger:response requestBackupUploadUnauthorized
*/
type RequestBackupUploadUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRequestBackupUploadUnauthorized creates RequestBackupUploadUnauthorized with default headers values
func NewRequestBackupUploadUnauthorized() *RequestBackupUploadUnauthorized {

	return &RequestBackupUploadUnauthorized{}
}

// WithPayload adds the payload to the request backup upload unauthorized response
func (o *RequestBackupUploadUnauthorized) WithPayload(payload *models.Error) *RequestBackupUploadUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request backup upload unauthorized response
func (o *RequestBackupUploadUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestBackupUploadUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestBackupUploadNotFoundCode is the HTTP code returned for type RequestBackupUploadNotFound
const RequestBackupUploadNotFoundCode int = 404

/*RequestBackupUploadNotFound The specified resource was not found.

swagger:response requestBackupUploadNotFound
*/
type RequestBackupUploadNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRequestBackupUploadNotFound creates RequestBackupUploadNotFound with default headers values
func NewRequestBackupUploadNotFound() *RequestBackupUploadNotFound {

	return &RequestBackupUploadNotFound{}
}

// WithPayload adds the payload to the request backup upload not found response
func (o *RequestBackupUploadNotFound) WithPayload(payload *models.Error) *RequestBackupUploadNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request backup upload not found response
func (o *RequestBackupUploadNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestBackupUploadNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
