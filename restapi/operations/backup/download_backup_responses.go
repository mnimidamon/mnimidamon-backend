// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"mnimidamonbackend/models"
)

// DownloadBackupOKCode is the HTTP code returned for type DownloadBackupOK
const DownloadBackupOKCode int = 200

/*DownloadBackupOK Binary string of the encoded file content.

swagger:response downloadBackupOK
*/
type DownloadBackupOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewDownloadBackupOK creates DownloadBackupOK with default headers values
func NewDownloadBackupOK() *DownloadBackupOK {

	return &DownloadBackupOK{}
}

// WithPayload adds the payload to the download backup o k response
func (o *DownloadBackupOK) WithPayload(payload io.ReadCloser) *DownloadBackupOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download backup o k response
func (o *DownloadBackupOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadBackupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DownloadBackupBadRequestCode is the HTTP code returned for type DownloadBackupBadRequest
const DownloadBackupBadRequestCode int = 400

/*DownloadBackupBadRequest Supplied parameters were not okay.

swagger:response downloadBackupBadRequest
*/
type DownloadBackupBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadBackupBadRequest creates DownloadBackupBadRequest with default headers values
func NewDownloadBackupBadRequest() *DownloadBackupBadRequest {

	return &DownloadBackupBadRequest{}
}

// WithPayload adds the payload to the download backup bad request response
func (o *DownloadBackupBadRequest) WithPayload(payload *models.Error) *DownloadBackupBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download backup bad request response
func (o *DownloadBackupBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadBackupBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadBackupUnauthorizedCode is the HTTP code returned for type DownloadBackupUnauthorized
const DownloadBackupUnauthorizedCode int = 401

/*DownloadBackupUnauthorized Unauthorized.

swagger:response downloadBackupUnauthorized
*/
type DownloadBackupUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadBackupUnauthorized creates DownloadBackupUnauthorized with default headers values
func NewDownloadBackupUnauthorized() *DownloadBackupUnauthorized {

	return &DownloadBackupUnauthorized{}
}

// WithPayload adds the payload to the download backup unauthorized response
func (o *DownloadBackupUnauthorized) WithPayload(payload *models.Error) *DownloadBackupUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download backup unauthorized response
func (o *DownloadBackupUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadBackupUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadBackupNotFoundCode is the HTTP code returned for type DownloadBackupNotFound
const DownloadBackupNotFoundCode int = 404

/*DownloadBackupNotFound The specified resource was not found.

swagger:response downloadBackupNotFound
*/
type DownloadBackupNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadBackupNotFound creates DownloadBackupNotFound with default headers values
func NewDownloadBackupNotFound() *DownloadBackupNotFound {

	return &DownloadBackupNotFound{}
}

// WithPayload adds the payload to the download backup not found response
func (o *DownloadBackupNotFound) WithPayload(payload *models.Error) *DownloadBackupNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download backup not found response
func (o *DownloadBackupNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadBackupNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
