// Code generated by go-swagger; DO NOT EDIT.

package current_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mnimidamonbackend/models"
)

// DeleteCurrentUserAcceptedCode is the HTTP code returned for type DeleteCurrentUserAccepted
const DeleteCurrentUserAcceptedCode int = 202

/*DeleteCurrentUserAccepted Successfuly deleted current user account.

swagger:response deleteCurrentUserAccepted
*/
type DeleteCurrentUserAccepted struct {
}

// NewDeleteCurrentUserAccepted creates DeleteCurrentUserAccepted with default headers values
func NewDeleteCurrentUserAccepted() *DeleteCurrentUserAccepted {

	return &DeleteCurrentUserAccepted{}
}

// WriteResponse to the client
func (o *DeleteCurrentUserAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(202)
}

// DeleteCurrentUserUnauthorizedCode is the HTTP code returned for type DeleteCurrentUserUnauthorized
const DeleteCurrentUserUnauthorizedCode int = 401

/*DeleteCurrentUserUnauthorized Unauthorized.

swagger:response deleteCurrentUserUnauthorized
*/
type DeleteCurrentUserUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteCurrentUserUnauthorized creates DeleteCurrentUserUnauthorized with default headers values
func NewDeleteCurrentUserUnauthorized() *DeleteCurrentUserUnauthorized {

	return &DeleteCurrentUserUnauthorized{}
}

// WithPayload adds the payload to the delete current user unauthorized response
func (o *DeleteCurrentUserUnauthorized) WithPayload(payload *models.Error) *DeleteCurrentUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete current user unauthorized response
func (o *DeleteCurrentUserUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCurrentUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
