// Code generated by go-swagger; DO NOT EDIT.

package invite

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mnimidamonbackend/adapter/restapi/modelapi"
)

// DeclineCurrentUserInviteNoContentCode is the HTTP code returned for type DeclineCurrentUserInviteNoContent
const DeclineCurrentUserInviteNoContentCode int = 204

/*DeclineCurrentUserInviteNoContent Invite declined.

swagger:response declineCurrentUserInviteNoContent
*/
type DeclineCurrentUserInviteNoContent struct {
}

// NewDeclineCurrentUserInviteNoContent creates DeclineCurrentUserInviteNoContent with default headers values
func NewDeclineCurrentUserInviteNoContent() *DeclineCurrentUserInviteNoContent {

	return &DeclineCurrentUserInviteNoContent{}
}

// WriteResponse to the client
func (o *DeclineCurrentUserInviteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeclineCurrentUserInviteUnauthorizedCode is the HTTP code returned for type DeclineCurrentUserInviteUnauthorized
const DeclineCurrentUserInviteUnauthorizedCode int = 401

/*DeclineCurrentUserInviteUnauthorized Unauthorized.

swagger:response declineCurrentUserInviteUnauthorized
*/
type DeclineCurrentUserInviteUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *modelapi.Error `json:"body,omitempty"`
}

// NewDeclineCurrentUserInviteUnauthorized creates DeclineCurrentUserInviteUnauthorized with default headers values
func NewDeclineCurrentUserInviteUnauthorized() *DeclineCurrentUserInviteUnauthorized {

	return &DeclineCurrentUserInviteUnauthorized{}
}

// WithPayload adds the payload to the decline current user invite unauthorized response
func (o *DeclineCurrentUserInviteUnauthorized) WithPayload(payload *modelapi.Error) *DeclineCurrentUserInviteUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the decline current user invite unauthorized response
func (o *DeclineCurrentUserInviteUnauthorized) SetPayload(payload *modelapi.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeclineCurrentUserInviteUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeclineCurrentUserInviteInternalServerErrorCode is the HTTP code returned for type DeclineCurrentUserInviteInternalServerError
const DeclineCurrentUserInviteInternalServerErrorCode int = 500

/*DeclineCurrentUserInviteInternalServerError Internal server error.

swagger:response declineCurrentUserInviteInternalServerError
*/
type DeclineCurrentUserInviteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *modelapi.Error `json:"body,omitempty"`
}

// NewDeclineCurrentUserInviteInternalServerError creates DeclineCurrentUserInviteInternalServerError with default headers values
func NewDeclineCurrentUserInviteInternalServerError() *DeclineCurrentUserInviteInternalServerError {

	return &DeclineCurrentUserInviteInternalServerError{}
}

// WithPayload adds the payload to the decline current user invite internal server error response
func (o *DeclineCurrentUserInviteInternalServerError) WithPayload(payload *modelapi.Error) *DeclineCurrentUserInviteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the decline current user invite internal server error response
func (o *DeclineCurrentUserInviteInternalServerError) SetPayload(payload *modelapi.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeclineCurrentUserInviteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
