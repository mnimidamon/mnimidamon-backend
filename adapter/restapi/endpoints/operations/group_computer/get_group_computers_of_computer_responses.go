// Code generated by go-swagger; DO NOT EDIT.

package group_computer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mnimidamonbackend/adapter/restapi/modelapi"
)

// GetGroupComputersOfComputerOKCode is the HTTP code returned for type GetGroupComputersOfComputerOK
const GetGroupComputersOfComputerOKCode int = 200

/*GetGroupComputersOfComputerOK The computer

swagger:response getGroupComputersOfComputerOK
*/
type GetGroupComputersOfComputerOK struct {

	/*
	  In: Body
	*/
	Payload []*modelapi.GroupComputer `json:"body,omitempty"`
}

// NewGetGroupComputersOfComputerOK creates GetGroupComputersOfComputerOK with default headers values
func NewGetGroupComputersOfComputerOK() *GetGroupComputersOfComputerOK {

	return &GetGroupComputersOfComputerOK{}
}

// WithPayload adds the payload to the get group computers of computer o k response
func (o *GetGroupComputersOfComputerOK) WithPayload(payload []*modelapi.GroupComputer) *GetGroupComputersOfComputerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group computers of computer o k response
func (o *GetGroupComputersOfComputerOK) SetPayload(payload []*modelapi.GroupComputer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupComputersOfComputerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*modelapi.GroupComputer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetGroupComputersOfComputerBadRequestCode is the HTTP code returned for type GetGroupComputersOfComputerBadRequest
const GetGroupComputersOfComputerBadRequestCode int = 400

/*GetGroupComputersOfComputerBadRequest Supplied parameters were not okay.

swagger:response getGroupComputersOfComputerBadRequest
*/
type GetGroupComputersOfComputerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *modelapi.Error `json:"body,omitempty"`
}

// NewGetGroupComputersOfComputerBadRequest creates GetGroupComputersOfComputerBadRequest with default headers values
func NewGetGroupComputersOfComputerBadRequest() *GetGroupComputersOfComputerBadRequest {

	return &GetGroupComputersOfComputerBadRequest{}
}

// WithPayload adds the payload to the get group computers of computer bad request response
func (o *GetGroupComputersOfComputerBadRequest) WithPayload(payload *modelapi.Error) *GetGroupComputersOfComputerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group computers of computer bad request response
func (o *GetGroupComputersOfComputerBadRequest) SetPayload(payload *modelapi.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupComputersOfComputerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupComputersOfComputerUnauthorizedCode is the HTTP code returned for type GetGroupComputersOfComputerUnauthorized
const GetGroupComputersOfComputerUnauthorizedCode int = 401

/*GetGroupComputersOfComputerUnauthorized Unauthorized.

swagger:response getGroupComputersOfComputerUnauthorized
*/
type GetGroupComputersOfComputerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *modelapi.Error `json:"body,omitempty"`
}

// NewGetGroupComputersOfComputerUnauthorized creates GetGroupComputersOfComputerUnauthorized with default headers values
func NewGetGroupComputersOfComputerUnauthorized() *GetGroupComputersOfComputerUnauthorized {

	return &GetGroupComputersOfComputerUnauthorized{}
}

// WithPayload adds the payload to the get group computers of computer unauthorized response
func (o *GetGroupComputersOfComputerUnauthorized) WithPayload(payload *modelapi.Error) *GetGroupComputersOfComputerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group computers of computer unauthorized response
func (o *GetGroupComputersOfComputerUnauthorized) SetPayload(payload *modelapi.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupComputersOfComputerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupComputersOfComputerInternalServerErrorCode is the HTTP code returned for type GetGroupComputersOfComputerInternalServerError
const GetGroupComputersOfComputerInternalServerErrorCode int = 500

/*GetGroupComputersOfComputerInternalServerError Internal server error.

swagger:response getGroupComputersOfComputerInternalServerError
*/
type GetGroupComputersOfComputerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *modelapi.Error `json:"body,omitempty"`
}

// NewGetGroupComputersOfComputerInternalServerError creates GetGroupComputersOfComputerInternalServerError with default headers values
func NewGetGroupComputersOfComputerInternalServerError() *GetGroupComputersOfComputerInternalServerError {

	return &GetGroupComputersOfComputerInternalServerError{}
}

// WithPayload adds the payload to the get group computers of computer internal server error response
func (o *GetGroupComputersOfComputerInternalServerError) WithPayload(payload *modelapi.Error) *GetGroupComputersOfComputerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group computers of computer internal server error response
func (o *GetGroupComputersOfComputerInternalServerError) SetPayload(payload *modelapi.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupComputersOfComputerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
